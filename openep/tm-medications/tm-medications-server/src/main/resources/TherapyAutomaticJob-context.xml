<?xml version="1.0" encoding="UTF-8"?><!--
  ~ Copyright (c) 2010-2015 Marand d.o.o. (www.marand.com)
  ~
  ~ This file is part of Think!Med Clinical Medication Management.
  ~
  ~ Think!Med Clinical Medication Management is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ Think!Med Clinical Medication Management is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with Think!Med Clinical Medication Management.  If not, see <http://www.gnu.org/licenses/>.
  -->

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
        xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <bean id="administrationAutoConfirmer" class="com.marand.maf.core.cron.TransparentSchedulerFactoryBean">
        <property name="autoStartup" value="${auto.administration.charting.enabled}"/>
        <property name="taskExecutor" ref="administrationAutoConfirmerExecutor"/>
        <property name="triggers">
            <list>
                <ref bean="administrationAutoConfirmerTrigger"/>
            </list>
        </property>
        <property name="quartzProperties">
            <props>
                <prop key="org.quartz.scheduler.skipUpdateCheck">true</prop>
            </props>
        </property>
        <property name="quartzMBeanExporter" ref="quartzMBeanExporter"/>
    </bean>

    <bean id="administrationAutoConfirmerExecutor" class="com.marand.maf.core.threading.UsageReportingThreadPoolTaskExecutor">
        <property name="resourceUsageTracker" value="INSTANCE"/>
        <property name="delegate">
            <bean class="com.marand.maf.core.security.auditing.SecurityAndAuditAwareThreadPoolTaskExecutor">
                <property name="delegate">
                    <task:executor id="_administrationAutoConfirmerExecutor" pool-size="1"/>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="administrationAutoConfirmerTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="administrationAutoConfirmerDetail"/>
        <property name="cronExpression" value="${auto.administration.charting.cron}"/>
    </bean>

    <bean id="administrationAutoConfirmerDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="administrationAutoConfirmerJob"/>
        <property name="targetMethod" value="run"/>
        <property name="concurrent" value="false"/>
    </bean>

    <bean id="administrationAutoConfirmerJob" class="com.marand.thinkmed.medications.automatic.AdministrationAutoTaskConfirmerImpl">
        <property name="medicationsOpenEhrDao" ref="medicationsOpenEhrDao"/>
        <property name="medicationsTasksProvider" ref="medicationsTasksProvider"/>
        <property name="administrationAutoTaskConfirmerHandler" ref="automaticAdministrationHandler"/>
        <property name="therapyCacheInvalidator" ref="therapyCacheInvalidator"/>
        <property name="username" value="${runas.username}"/>
        <property name="password" value="${runas.password}"/>
    </bean>

    <!--automatic confirmer-->
    <bean id="autoTaskCreator" class="com.marand.maf.core.cron.TransparentSchedulerFactoryBean">
        <property name="autoStartup" value="${auto.task.creator.enabled:true}"/>
        <property name="taskExecutor" ref="autoTaskCreatorExecutor"/>
        <property name="triggers">
            <list>
                <ref bean="autoTaskCreatorTrigger"/>
            </list>
        </property>
        <property name="quartzProperties">
            <props>
                <prop key="org.quartz.scheduler.skipUpdateCheck">true</prop>
            </props>
        </property>
        <property name="quartzMBeanExporter" ref="quartzMBeanExporter"/>
    </bean>

    <bean id="autoTaskCreatorExecutor" class="com.marand.maf.core.threading.UsageReportingThreadPoolTaskExecutor">
        <property name="resourceUsageTracker" value="INSTANCE"/>
        <property name="delegate">
            <bean class="com.marand.maf.core.security.auditing.SecurityAndAuditAwareThreadPoolTaskExecutor">
                <property name="delegate">
                    <task:executor id="_autoTaskCreatorExecutor" pool-size="1"/>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="autoTaskCreatorTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="autoTaskCreatorDetail"/>
        <property name="startDelay" value="10000"/>
        <property name="cronExpression" value="${auto.task.creator.cron}"/>
    </bean>

    <bean id="autoTaskCreatorDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="autoTaskCreatorJob"/>
        <property name="targetMethod" value="run"/>
        <property name="concurrent" value="false"/>
    </bean>

    <bean id="autoTaskCreatorJob" class="com.marand.thinkmed.medications.automatic.AdministrationAutoTaskCreator">
        <property name="medicationsOpenEhrDao" ref="medicationsOpenEhrDao"/>
        <property name="administrationAutoTaskCreatorHandler" ref="administrationAutoTaskCreatorHandler"/>
        <property name="therapyCacheInvalidator" ref="therapyCacheInvalidator"/>
        <property name="medicationsBo" ref="medicationsBo"/>
        <property name="username" value="${runas.username}"/>
        <property name="password" value="${runas.password}"/>
    </bean>
</beans>
